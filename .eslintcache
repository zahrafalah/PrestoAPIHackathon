[{"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\index.js":"1","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\App.js":"2","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\reportWebVitals.js":"3","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\Login.js":"4","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\SignUp.js":"5","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MoviesList.js":"6","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MovieDetails.js":"7","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MovieCard.js":"8","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\api\\movie.js":"9","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\api\\instance.js":"10"},{"size":500,"mtime":1607201611341,"results":"11","hashOfConfig":"12"},{"size":1627,"mtime":1607655184277,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607201611341,"results":"14","hashOfConfig":"12"},{"size":1281,"mtime":1607210355912,"results":"15","hashOfConfig":"12"},{"size":1960,"mtime":1607316649148,"results":"16","hashOfConfig":"12"},{"size":791,"mtime":1607496343735,"results":"17","hashOfConfig":"12"},{"size":3009,"mtime":1607645711262,"results":"18","hashOfConfig":"12"},{"size":1112,"mtime":1607497027220,"results":"19","hashOfConfig":"12"},{"size":451,"mtime":1607646129208,"results":"20","hashOfConfig":"12"},{"size":132,"mtime":1607316406557,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16e5yul",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\index.js",[],["47","48"],"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\App.js",[],"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\reportWebVitals.js",[],"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\Login.js",["49"],"import React, { Component } from \"react\";\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3>Log In</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customCheck1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n          Submit\r\n        </button>\r\n        <p className=\"forgot-password text-right\">\r\n          Forgot <a href=\"#\">password?</a>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\SignUp.js",["50"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { register } from \"../api/auth\";\r\n\r\nconst SignUp = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { email, password, password2 } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      alert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      // register({ email, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form authForm\" onSubmit={(e) => onSubmit(e)}>\r\n      <h3>Sign Up</h3>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Email address</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control\"\r\n          placeholder=\"Enter email\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control\"\r\n          placeholder=\"Enter password\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password2\"\r\n          value={password2}\r\n          onChange={(e) => onChange(e)}\r\n          className=\"form-control\"\r\n          placeholder=\"Enter confirm-password\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n        Sign Up\r\n      </button>\r\n      <p className=\"forgot-password text-right\">\r\n        Already registered <Link to={\"/sign-in\"}>sign in?</Link>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\nexport default SignUp;\r\n","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MoviesList.js",[],"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MovieDetails.js",["51","52","53","54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport { movieAPI } from \"../api/movie\";\r\nimport Img from \"./download.png\";\r\n\r\nexport default function MovieDetails({ match }) {\r\n  const [err, setErr] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [comments, setComments] = useState(null);\r\n  // const [src, setSrc] = useState(movie.poster);\r\n  useEffect(() => {\r\n    movieAPI\r\n      .getById(match.params.id)\r\n      .then((data) => setMovie(data))\r\n      .catch((e) => setErr(e.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    movieAPI\r\n      .getComments()\r\n      .then((data) => setComments(data))\r\n      .catch((e) => setError(e.message));\r\n  }, []);\r\n  if (!movie) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return err ? (\r\n    <div>{err}</div>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n          <div className=\"card\">\r\n            <img\r\n              className=\"card-img-top\"\r\n              width=\"200\"\r\n              height=\"280\"\r\n              // onError={(e) => {\r\n              //   setSrc(Img);\r\n              // }}\r\n              src={movie.poster}\r\n              alt=\"Card image cap\"\r\n            />\r\n            <div className=\"title\">\r\n              <span className=\"bold\">Title:</span> {movie.title}\r\n            </div>\r\n            <div className=\"awards\">\r\n              <span className=\"bold\">Awards:</span> {movie.awards.wins}\r\n            </div>\r\n            <div className=\"rated\">\r\n              <span className=\"bold\">Rated:</span> {movie.rated}\r\n            </div>\r\n            <div className=\"casts\">\r\n              {\" \"}\r\n              <span className=\"bold\">Casts:</span>\r\n              {movie.cast.map((cast) => {\r\n                return cast;\r\n              })}\r\n            </div>\r\n            <div className=\"countries\">\r\n              {\" \"}\r\n              <span className=\"bold\">Countries:</span>\r\n              {movie.countries.map((country) => country)}\r\n            </div>\r\n            <div className=\"genres\">\r\n              <span className=\"bold\">Genres:</span>{\" \"}\r\n              {movie.genres.map((genre) => genre)}\r\n            </div>\r\n            <div className=\"imdb\">\r\n              <span className=\"bold\">IMDB:</span> {movie.imdb.rating}\r\n            </div>\r\n            {movie.languages ? (\r\n              <div className=\"language\">\r\n                <span className=\"bold\">languages:</span>\r\n                {movie.languages.map((l) => {\r\n                  return l;\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {\" \"}\r\n                <span className=\"bold\">languages: NAN</span>\r\n              </div>\r\n            )}\r\n            <div className=\"tomatoes\">\r\n              <span className=\"bold\">Tomatoes:</span>{\" \"}\r\n              {movie.tomatoes.viewer.rating}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\Components\\MovieCard.js",["56","57","58"],"import React, { lazy, useEffect, useState } from \"react\";\r\nimport Img from \"./download.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MovieCard(props) {\r\n  const [src, setSrc] = useState(props.poster);\r\n\r\n  return (\r\n    <Link className=\"card\" to={`/Movie/${props._id}`}>\r\n      <img\r\n        className=\"card-img-top\"\r\n        width=\"200\"\r\n        height=\"280\"\r\n        onError={(e) => {\r\n          setSrc(Img);\r\n        }}\r\n        src={\r\n          src ||\r\n          \"https://breakthrough.org/wp-content/uploads/2018/10/default-placeholder-image.png\"\r\n          //   src\r\n          //     ? src\r\n          //     : \"https://breakthrough.org/wp-content/uploads/2018/10/default-placeholder-image.png\"\r\n        }\r\n        alt=\"Card image cap\"\r\n      />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.title}</h5>\r\n        <p className=\"card-text\">{props.plot}</p>\r\n        <p>{props.year}</p>\r\n        <p>{props.rated}</p>\r\n        {/* <a href=\"#\" className=\"btn btn-primary\">\r\n          Go somewhere\r\n        </a> */}\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\api\\movie.js",[],"C:\\Users\\Sepideh\\Documents\\coding\\PrestoAPIHackathon\\src\\api\\instance.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":44,"column":18,"nodeType":"65","endLine":44,"endColumn":30},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":11},{"ruleId":"66","severity":1,"message":"71","line":7,"column":10,"nodeType":"68","messageId":"69","endLine":7,"endColumn":15},{"ruleId":"66","severity":1,"message":"72","line":10,"column":10,"nodeType":"68","messageId":"69","endLine":10,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":17,"column":6,"nodeType":"75","endLine":17,"endColumn":8,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":35,"column":13,"nodeType":"65","endLine":44,"endColumn":15},{"ruleId":"66","severity":1,"message":"79","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":21},{"ruleId":"66","severity":1,"message":"80","line":1,"column":23,"nodeType":"68","messageId":"69","endLine":1,"endColumn":32},{"ruleId":"77","severity":1,"message":"78","line":10,"column":7,"nodeType":"65","endLine":25,"endColumn":9},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Img' is defined but never used.","'error' is assigned a value but never used.","'comments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["83"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'lazy' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [match.params.id]",{"range":"86","text":"87"},[568,570],"[match.params.id]"]